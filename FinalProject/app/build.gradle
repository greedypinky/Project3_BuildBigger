apply plugin: 'com.android.application'
//apply plugin: 'com.google.cloud.tools.appengine' // App Engine Tasks

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.0'

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 3
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

 // TODO :  add productFlavors for free and paid build
    productFlavors {
        free {

            //applicationId must have at least 2 segment (one or more dots) and each segment must start with a letter
            // all characters must be alphanumeric or an underscore
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
        }

        paid {
            applicationIdSuffix ".paid"
            versionNameSuffix "-paid"
            // add the paid folder so add the new package for the paid productFlavors
            applicationId = "com.udacity.gradle.builditbigger.paid"
        }

    }

    testOptions {
        unitTests.returnDefaultValues = true
    }



}

// resolve conflict for test app that uses (25.4.0)
configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:25.4.0'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // https://developers.google.com/api-client-library/java/
    compile 'com.google.api-client:google-api-client:1.22.0'
    compile 'com.google.http-client:google-http-client-android:1.22.0' exclude module: 'httpclient'
    //compile 'com.google.api-client-android:google-api-client-android:1.22.0'
    // add jokeslib as the dependencies
    compile project(':jokeslib')
    // add android library dependencies
    compile project(':myandroidjokelibrary')
    compile 'com.android.support:appcompat-v7:26.0.0'
    // add the google ads library
    // add a compile dependency only to your "free" product flavor
    //freeCompile 'com.google.android.gms:play-services-ads:9.0.2'
    compile 'com.google.android.gms:play-services-ads:9.0.2'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    // add the backend API library
    compile project(path: ':backend', configuration: 'android-endpoints')
    compile files('libs/backend-android-endpoints.jar')

    // AndroidJUnitRunner and JUnit Rules
    //androidTestCompile 'com.android.support:support-annotations:26.1.0'
    // Optional -- Hamcrest library
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'
    testCompile 'junit:junit:4.12'

}

task startAppEngine (dependsOn: ":backend:appengineRun") {

    project(":backend").afterEvaluate { backend ->
        backend.extensions.appengine.daemon = true
    }
    doLast {
        println "start the appengine in daemon mode!"
    }

}
//
//task runTest (){
//    dependsOn {
//        "app:connectedCheck"
//    }
//    doLast {
//        println "All tests complete"
//    }
//}

// need to move into the /app directory and run by "gradle startAsyncTaskTest"
task startAsyncTaskTest(dependsOn: ":app:startAppEngine") {

    dependsOn {
        "connectedAndroidTest"
    }
    finalizedBy ":backend:appengineStop"
    doLast {
        println "please check the test result!"
        println "stop the appengine!"
    }

}


